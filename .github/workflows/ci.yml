name: CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  tests:
    name: Tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Validate composer files
        run: composer validate

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'
          extensions: mbstring, xml, ctype, iconv, intl, pdo_sqlite
          coverage: none

      - name: Create .env files
        run: |
          echo "APP_ENV=test" > .env
          echo "APP_SECRET=test" >> .env
          echo "DATABASE_URL=sqlite:///%kernel.project_dir%/var/test.db" >> .env
          echo "TELEGRAM_BOT_TOKEN=test_token" >> .env
          echo "TELEGRAM_WEBHOOK_SECRET=test_secret" >> .env
          cp .env.test.dist .env.test

      - name: Get composer cache directory
        id: composer-cache
        run: echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT

      - name: Cache composer dependencies
        uses: actions/cache@v3
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-

      - name: Install dependencies
        run: |
          composer install --prefer-dist --no-progress
          composer dump-autoload --optimize

      - name: Create test database
        run: |
          mkdir -p var
          touch var/test.db

      - name: Run test suite
        run: |
          php bin/console --env=test doctrine:schema:create
          php bin/phpunit

  static-analysis:
    name: Static Analysis
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'
          coverage: none

      - name: Create .env file
        run: |
          echo "APP_ENV=dev" > .env
          echo "APP_SECRET=test" >> .env
          echo "DATABASE_URL=sqlite:///%kernel.project_dir%/var/app.db" >> .env
          echo "TELEGRAM_BOT_TOKEN=test_token" >> .env
          echo "TELEGRAM_WEBHOOK_SECRET=test_secret" >> .env

      - name: Install dependencies
        run: |
          composer install --prefer-dist --no-progress
          composer dump-autoload --optimize

      - name: Generate container for PHPStan
        run: |
          php bin/console cache:clear --env=dev
          php bin/console cache:warmup --env=dev

      - name: Run PHPStan
        run: vendor/bin/phpstan analyse -c phpstan.neon

  coding-standards:
    name: Coding Standards
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'
          coverage: none

      - name: Create .env file
        run: |
          echo "APP_ENV=dev" > .env
          echo "APP_SECRET=test" >> .env
          echo "DATABASE_URL=sqlite:///%kernel.project_dir%/var/app.db" >> .env
          echo "TELEGRAM_BOT_TOKEN=test_token" >> .env
          echo "TELEGRAM_WEBHOOK_SECRET=test_secret" >> .env

      - name: Install dependencies
        run: |
          composer install --prefer-dist --no-progress
          composer dump-autoload --optimize

      - name: Check coding standards
        run: vendor/bin/php-cs-fixer fix --dry-run --diff 